#define CATCH_CONFIG_MAIN

#include <catch2/catch.hpp>
#include "../src/image_classifier_lib.h"


TEST_CASE("Loading model", "[load_model]") {
    int32_t res = load_model("research/traced_model.pt");
    REQUIRE(res == 0);
}

float test_image_data[784]{
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.0431,  0.9922,
        0.9922,  0.6627, -0.0510, -0.7490, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -0.9529,  0.4510,  0.9843,  0.9843,  0.9843,  0.1373,
        -0.7333, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.2549,  0.2627,
        0.9843,  0.9843,  0.9843,  0.9843,  0.5608, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -0.9059,  0.6784,  0.9922,  0.9843,  0.4196, -0.5294,  0.3020,  0.9843,
        0.9373, -0.0431, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -0.9373,  0.1529,  0.9843,  0.9922,  0.0353,
        -0.9529, -1.0000, -0.8902,  0.5765,  0.9843,  0.7725, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.9294,  0.1373,
        0.9843,  0.9843,  0.2941, -0.9686, -1.0000, -1.0000, -1.0000,  0.4667,
        0.9843,  0.9294, -0.3804, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -0.9294,  0.1373,  0.9843,  0.9843,  0.8196, -0.6706, -1.0000,
        -1.0000, -1.0000, -1.0000, -0.2471,  0.9843,  0.9843, -0.1608, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.4667,  0.9843,  0.9843,
        0.9216, -0.6549, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.5765,
        0.9843,  0.9843, -0.1608, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -0.6314,  0.7725,  0.9843,  0.9216,  0.2235, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -0.5216,  0.9843,  0.9843, -0.1608, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -0.6627,  0.7961,  0.9843,  0.9843, -0.2706,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.4667,
        0.9843,  0.9843, -0.1608, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.1294,
        0.9922,  0.9922,  0.6784, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000,  0.4745,  1.0000,  1.0000, -0.1608, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -0.2941,  0.9686,  0.9843,  0.8039, -0.5843, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.7725,  0.6863,
        0.9843,  0.7882, -0.9529, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.2627,  0.9843,
        0.9843,  0.1765, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -0.7647,  0.6235,  0.9843,  0.9843,  0.7725, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000,  0.6235,  0.9843,  0.8196, -0.6471, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.0275,  0.9843,  0.9843,
        0.7176, -0.7255, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.7725,  0.8353,  0.9843,
        0.1843, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.7725,
        0.4667,  0.9216,  0.9843,  0.5922, -0.3255, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -0.7804,  0.8353,  0.9843,  0.1843, -1.0000, -1.0000, -1.0000,
        -1.0000, -0.7725, -0.0745,  0.6863,  0.9843,  0.9843,  0.6549, -0.5922,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.7882,  0.9843,
        0.8196, -0.4039, -0.6784, -0.5686,  0.3647,  0.6941,  1.0000,  0.9843,
        0.9843,  0.3804, -0.8667, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000,  0.1137,  0.9843,  0.9843,  0.9843,  0.9843,  0.9843,
        0.9843,  0.9843,  1.0000,  0.8980,  0.3882, -0.8824, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3020,  0.9137,
        0.9843,  0.9843,  0.9843,  0.9843,  0.9765,  0.8824,  0.3882, -0.5137,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -0.7020, -0.0588,  0.1529,  0.9843,  0.8745,
        -0.1059, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,
        -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000
};


TEST_CASE("Evaluating model", "[eval_model]") {
    load_model("research/traced_model.pt");
    uint32_t label_num = 0;
    int32_t res = eval_model(test_image_data, 784, 10, &label_num);
    REQUIRE(res == 0);
    REQUIRE(label_num <= 9);
}

TEST_CASE("Get last error", "[get_last_error]") {
    load_model("research/not_exist.pt");
    char msg[512];
    auto res = get_last_error(msg, 512);
    REQUIRE(res == 0);
}
